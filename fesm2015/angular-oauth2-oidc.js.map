{"version":3,"file":"angular-oauth2-oidc.js","sources":["ng://angular-oauth2-oidc/types.ts","ng://angular-oauth2-oidc/base64-helper.ts","ng://angular-oauth2-oidc/token-validation/validation-handler.ts","ng://angular-oauth2-oidc/url-helper.service.ts","ng://angular-oauth2-oidc/events.ts","ng://angular-oauth2-oidc/auth.config.ts","ng://angular-oauth2-oidc/encoder.ts","ng://angular-oauth2-oidc/token-validation/hash-handler.ts","ng://angular-oauth2-oidc/oauth-service.ts","ng://angular-oauth2-oidc/oauth-module.config.ts","ng://angular-oauth2-oidc/interceptors/resource-server-error-handler.ts","ng://angular-oauth2-oidc/interceptors/default-oauth.interceptor.ts","ng://angular-oauth2-oidc/token-validation/null-validation-handler.ts","ng://angular-oauth2-oidc/factories.ts","ng://angular-oauth2-oidc/angular-oauth-oidc.module.ts","ng://angular-oauth2-oidc/token-validation/jwks-validation-handler.ts","ng://angular-oauth2-oidc/tokens.ts","ng://angular-oauth2-oidc/angular-oauth2-oidc.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise<any>;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map<string, string>();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string; \n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n}\n","// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\nexport function b64DecodeUnicode(str) {\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\n\n  return decodeURIComponent(\n    atob(base64)\n      .split('')\n      .map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join('')\n  );\n}\n\nexport function base64UrlEncode(str): string {\n  const base64 = btoa(str);\n  return base64\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '');\n}","import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise<object>;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise<any>;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(validationParams: ValidationParams): Promise<boolean>;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise<any>;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise<boolean> {\n    let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    let atHash = base64UrlEncode(leftMostHalf);\n\n    let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    let alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    const data = {};\n    let\n      pairs,\n      pair,\n      separatorIndex,\n      escapedKey,\n      escapedValue,\n      key,\n      value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    pairs = queryString.split('&');\n\n    for (let i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      separatorIndex = pair.indexOf('=');\n\n      if (separatorIndex === -1) {\n        escapedKey = pair;\n        escapedValue = null;\n      } else {\n        escapedKey = pair.substr(0, separatorIndex);\n        escapedValue = pair.substr(separatorIndex + 1);\n      }\n\n      key = decodeURIComponent(escapedKey);\n      value = decodeURIComponent(escapedValue);\n\n      if (key.substr(0, 1) === '/') { key = key.substr(1); }\n\n      data[key] = value;\n    }\n\n    return data;\n  }\n}\n","export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n","export class AuthConfig {\n  /**\n   * The client's id as registered with the auth server\n   */\n  public clientId? = '';\n\n  /**\n   * The client's redirectUri as registered with the auth server\n   */\n  public redirectUri? = '';\n\n  /**\n   * An optional second redirectUri where the auth server\n   * redirects the user to after logging out.\n   */\n  public postLogoutRedirectUri? = '';\n\n  /**\n   * The auth server's endpoint that allows to log\n   * the user in when using implicit flow.\n   */\n  public loginUrl? = '';\n\n  /**\n   * The requested scopes\n   */\n  public scope? = 'openid profile';\n\n  public resource? = '';\n\n  public rngUrl? = '';\n\n  /**\n   * Defines whether to use OpenId Connect during\n   * implicit flow.\n   */\n  public oidc? = true;\n\n  /**\n   * Defines whether to request an access token during\n   * implicit flow.\n   */\n  public requestAccessToken? = true;\n\n  public options?: any = null;\n\n  /**\n   * The issuer's uri.\n   */\n  public issuer? = '';\n\n  /**\n   * The logout url.\n   */\n  public logoutUrl? = '';\n\n  /**\n   * Defines whether to clear the hash fragment after logging in.\n   */\n  public clearHashAfterLogin? = true;\n\n  /**\n   * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\n   */\n  public tokenEndpoint?: string = null;\n\n  /**\n   * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\n   */\n  public customTokenParameters?: string[] = [];\n\n  /**\n   * Url of the userinfo endpoint as defined by OpenId Connect.\n   */\n  public userinfoEndpoint?: string = null;\n\n  public responseType? = '';\n\n  /**\n   * Defines whether additional debug information should\n   * be shown at the console. Note that in certain browsers\n   * the verbosity of the console needs to be explicitly set\n   * to include Debug level messages.\n   */\n   public showDebugInformation? = false;\n\n  /**\n   * The redirect uri used when doing silent refresh.\n   */\n  public silentRefreshRedirectUri? = '';\n\n  public silentRefreshMessagePrefix? = '';\n\n  /**\n   * Set this to true to display the iframe used for\n   * silent refresh for debugging.\n   */\n  public silentRefreshShowIFrame? = false;\n\n  /**\n   * Timeout for silent refresh.\n   * @internal\n   * depreacted b/c of typo, see silentRefreshTimeout\n   */\n  public siletRefreshTimeout?: number = 1000 * 20;\n\n  /**\n   * Timeout for silent refresh.\n   */\n  public silentRefreshTimeout?: number = 1000 * 20;\n\n  /**\n   * Some auth servers don't allow using password flow\n   * w/o a client secret while the standards do not\n   * demand for it. In this case, you can set a password\n   * here. As this password is exposed to the public\n   * it does not bring additional security and is therefore\n   * as good as using no password.\n   */\n  public dummyClientSecret?: string = null;\n\n  /**\n   * Defines whether https is required.\n   * The default value is remoteOnly which only allows\n   * http for localhost, while every other domains need\n   * to be used with https.\n   */\n  public requireHttps?: boolean | 'remoteOnly' = 'remoteOnly';\n\n  /**\n   * Defines whether every url provided by the discovery\n   * document has to start with the issuer's url.\n   */\n  public strictDiscoveryDocumentValidation? = true;\n\n  /**\n   * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\n   * with keys used to validate received id_tokens.\n   * This is taken out of the disovery document. Can be set manually too.\n   */\n  public jwks?: object = null;\n\n  /**\n   * Map with additional query parameter that are appended to\n   * the request when initializing implicit flow.\n   */\n  public customQueryParams?: object = null;\n\n  public silentRefreshIFrameName? = 'angular-oauth-oidc-silent-refresh-iframe';\n\n  /**\n   * Defines when the token_timeout event should be raised.\n   * If you set this to the default value 0.75, the event\n   * is triggered after 75% of the token's life time.\n   */\n  public timeoutFactor? = 0.75;\n\n  /**\n   * If true, the lib will try to check whether the user\n   * is still logged in on a regular basis as described\n   * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n   */\n  public sessionChecksEnabled? = false;\n\n  /**\n   * Interval in msec for checking the session\n   * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\n   */\n  public sessionCheckIntervall? = 3 * 1000;\n\n  /**\n   * Url for the iframe used for session checks\n   */\n  public sessionCheckIFrameUrl?: string = null;\n\n  /**\n   * Name of the iframe to use for session checks\n   */\n  public sessionCheckIFrameName? = 'angular-oauth-oidc-check-session-iframe';\n\n  /**\n   * This property has been introduced to disable at_hash checks\n   * and is indented for Identity Provider that does not deliver\n   * an at_hash EVEN THOUGH its recommended by the OIDC specs.\n   * Of course, when disabling these checks the we are bypassing\n   * a security check which means we are more vulnerable.\n   */\n  public disableAtHashCheck? = false;\n\n  /**\n   * Defines wether to check the subject of a refreshed token after silent refresh.\n   * Normally, it should be the same as before.\n   */\n  public skipSubjectCheck? = false;\n\n  public useIdTokenHintForSilentRefresh? = false;\n\n  /**\n   * Defined whether to skip the validation of the issuer in the discovery document.\n   * Normally, the discovey document's url starts with the url of the issuer.\n   */\n  public skipIssuerCheck? = false;\n\n  /**\n   * According to rfc6749 it is recommended (but not required) that the auth\n   * server exposes the access_token's life time in seconds.\n   * This is a fallback value for the case this value is not exposed.\n   */\n  public fallbackAccessTokenExpirationTimeInSec?: number;\n\n  /**\n   * final state sent to issuer is built as follows:\n   * state = nonce + nonceStateSeparator + additional state\n   * Default separator is ';' (encoded %3B).\n   * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\n   */\n  public nonceStateSeparator? = ';';\n\n  /**\n   * Set this to true to use HTTP BASIC auth for password flow\n   */\n  public useHttpBasicAuth? = false;\n\n  /**\n   * The window of time (in seconds) to allow the current time to deviate when validating id_token's iat and exp values.\n   */\n  public clockSkewInSec?: number;\n\n  /**\n   * The interceptors waits this time span if there is no token\n  */\n  public waitForTokenInMsec? = 0;\n\n  /**\n   * Code Flow is by defauld used together with PKCI which is also higly recommented.\n   * You can disbale it here by setting this flag to true.\n   * https://tools.ietf.org/html/rfc7636#section-1.1\n   */\n  public disablePKCE? = false;\n\n  constructor(json?: Partial<AuthConfig>) {\n    if (json) {\n      Object.assign(this, json);\n    }\n  }\n\n  /**\n   * This property allows you to override the method that is used to open the login url,\n   * allowing a way for implementations to specify their own method of routing to new\n   * urls.\n   */\n  public openUri?: ((uri: string) => void) = uri => {\n    location.href = uri;\n  }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Abstraction for crypto algorithms\n*/\nexport abstract class HashHandler {\n    abstract calcHash(valueToHash: string, algorithm: string): Promise<string>;\n}\n\n@Injectable()\nexport class DefaultHashHandler implements HashHandler {\n\n    async calcHash(valueToHash: string, algorithm: string): Promise<string> {\n        const encoder = new TextEncoder();\n        const data = encoder.encode(valueToHash);\n        const hashArray = await window.crypto.subtle.digest(algorithm, data);\n        return this.toHashString(hashArray);\n    }\n\n    toHashString(buffer: ArrayBuffer) {\n      const byteArray = new Uint8Array(buffer);\n      let result = '';\n      for (let e of byteArray) {\n        result += String.fromCharCode(e);\n      }\n      return result;\n    }\n\n    // hexString(buffer) {\n    //     const byteArray = new Uint8Array(buffer);\n    //     const hexCodes = [...byteArray].map(value => {\n    //       const hexCode = value.toString(16);\n    //       const paddedHexCode = hexCode.padStart(2, '0');\n    //       return paddedHexCode;\n    //     });\n      \n    //     return hexCodes.join('');\n    //   }\n    \n      // toHashString(hexString: string) {\n      //   let result = '';\n      //   for (let i = 0; i < hexString.length; i += 2) {\n      //     let hexDigit = hexString.charAt(i) + hexString.charAt(i + 1);\n      //     let num = parseInt(hexDigit, 16);\n      //     result += String.fromCharCode(num);\n      //   }\n      //   return result;\n      // }\n\n}","import { Injectable, NgZone, Optional, OnDestroy } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject, Subscription, of, race, from } from 'rxjs';\nimport { filter, delay, first, tap, map, switchMap, debounceTime } from 'rxjs/operators';\n\nimport {\n    ValidationHandler,\n    ValidationParams\n} from './token-validation/validation-handler';\nimport { UrlHelperService } from './url-helper.service';\nimport {\n    OAuthEvent,\n    OAuthInfoEvent,\n    OAuthErrorEvent,\n    OAuthSuccessEvent\n} from './events';\nimport {\n    OAuthLogger,\n    OAuthStorage,\n    LoginOptions,\n    ParsedIdToken,\n    OidcDiscoveryDoc,\n    TokenResponse,\n    UserInfo\n} from './types';\nimport { b64DecodeUnicode, base64UrlEncode } from './base64-helper';\nimport { AuthConfig } from './auth.config';\nimport { WebHttpUrlEncodingCodec } from './encoder';\nimport { HashHandler } from './token-validation/hash-handler';\n\n/**\n * Service for logging in and logging out with\n * OIDC and OAuth2. Supports implicit flow and\n * password flow.\n */\n@Injectable()\nexport class OAuthService extends AuthConfig implements OnDestroy {\n    // Extending AuthConfig ist just for LEGACY reasons\n    // to not break existing code.\n\n    /**\n     * The ValidationHandler used to validate received\n     * id_tokens.\n     */\n    public tokenValidationHandler: ValidationHandler;\n\n    /**\n     * @internal\n     * Deprecated:  use property events instead\n     */\n    public discoveryDocumentLoaded = false;\n\n    /**\n     * @internal\n     * Deprecated:  use property events instead\n     */\n    public discoveryDocumentLoaded$: Observable<OidcDiscoveryDoc>;\n\n    /**\n     * Informs about events, like token_received or token_expires.\n     * See the string enum EventType for a full list of event types.\n     */\n    public events: Observable<OAuthEvent>;\n\n    /**\n     * The received (passed around) state, when logging\n     * in with implicit flow.\n     */\n    public state?= '';\n\n    protected eventsSubject: Subject<OAuthEvent> = new Subject<OAuthEvent>();\n    protected discoveryDocumentLoadedSubject: Subject<OidcDiscoveryDoc> = new Subject<OidcDiscoveryDoc>();\n    protected silentRefreshPostMessageEventListener: EventListener;\n    protected grantTypesSupported: Array<string> = [];\n    protected _storage: OAuthStorage;\n    protected accessTokenTimeoutSubscription: Subscription;\n    protected idTokenTimeoutSubscription: Subscription;\n    protected tokenReceivedSubscription: Subscription;\n    protected sessionCheckEventListener: EventListener;\n    protected jwksUri: string;\n    protected sessionCheckTimer: any;\n    protected silentRefreshSubject: string;\n    protected inImplicitFlow = false;\n\n    constructor(\n        protected ngZone: NgZone,\n        protected http: HttpClient,\n        @Optional() storage: OAuthStorage,\n        @Optional() tokenValidationHandler: ValidationHandler,\n        @Optional() protected config: AuthConfig,\n        protected urlHelper: UrlHelperService,\n        protected logger: OAuthLogger,\n        @Optional() protected crypto: HashHandler,\n    ) {\n        super();\n\n        this.debug('angular-oauth2-oidc v8-beta');\n\n        this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n        this.events = this.eventsSubject.asObservable();\n\n        if (tokenValidationHandler) {\n            this.tokenValidationHandler = tokenValidationHandler;\n        }\n\n        if (config) {\n            this.configure(config);\n        }\n\n        try {\n            if (storage) {\n                this.setStorage(storage);\n            } else if (typeof sessionStorage !== 'undefined') {\n                this.setStorage(sessionStorage);\n            }\n        } catch (e) {\n\n            console.error(\n                'No OAuthStorage provided and cannot access default (sessionStorage).'\n                + 'Consider providing a custom OAuthStorage implementation in your module.',\n                e\n            );\n        }\n\n        this.setupRefreshTimer();\n    }\n\n    /**\n     * Use this method to configure the service\n     * @param config the configuration\n     */\n    public configure(config: AuthConfig): void {\n        // For the sake of downward compatibility with\n        // original configuration API\n        Object.assign(this, new AuthConfig(), config);\n\n        this.config = Object.assign({} as AuthConfig, new AuthConfig(), config);\n\n        if (this.sessionChecksEnabled) {\n            this.setupSessionCheck();\n        }\n\n        this.configChanged();\n    }\n\n    protected configChanged(): void {\n        this.setupRefreshTimer();\n    }\n\n    public restartSessionChecksIfStillLoggedIn(): void {\n        if (this.hasValidIdToken()) {\n            this.initSessionCheck();\n        }\n    }\n\n    protected restartRefreshTimerIfStillLoggedIn(): void {\n        this.setupExpirationTimers();\n    }\n\n    protected setupSessionCheck(): void {\n        this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\n            this.initSessionCheck();\n        });\n    }\n\n    /**\n     * Will setup up silent refreshing for when the token is\n     * about to expire. When the user is logged out via this.logOut method, the\n     * silent refreshing will pause and not refresh the tokens until the user is\n     * logged back in via receiving a new token.\n     * @param params Additional parameter to pass\n     * @param listenTo Setup automatic refresh of a specific token type\n     */\n    public setupAutomaticSilentRefresh(params: object = {}, listenTo?: 'access_token' | 'id_token' | 'any', noPrompt = true): void {\n        let shouldRunSilentRefresh = true;\n        this.events.pipe(\n            tap((e) => {\n                if (e.type === 'token_received') {\n                    shouldRunSilentRefresh = true;\n                } else if (e.type === 'logout') {\n                    shouldRunSilentRefresh = false;\n                }\n            }),\n            filter(e => e.type === 'token_expires'),\n            debounceTime(1000),\n        ).subscribe(e => {\n            const event = e as OAuthInfoEvent;\n            if ((listenTo == null || listenTo === 'any' || event.info === listenTo) && shouldRunSilentRefresh) {\n                // this.silentRefresh(params, noPrompt).catch(_ => {\n                this.refreshInternal(params, noPrompt).catch(_ => {\n                    this.debug('Automatic silent refresh did not work');\n                });\n            }\n        });\n\n        this.restartRefreshTimerIfStillLoggedIn();\n    }\n\n    protected refreshInternal(params, noPrompt): Promise<TokenResponse | OAuthEvent> {\n\n        if (!this.silentRefreshRedirectUri && this.responseType === 'code') {\n            return this.refreshToken();\n        } else {\n            return this.silentRefresh(params, noPrompt);\n        }\n    }\n\n    /**\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\n     * directly chains using the `then(...)` part of the promise to call\n     * the `tryLogin(...)` method.\n     *\n     * @param options LoginOptions to pass through to `tryLogin(...)`\n     */\n    public loadDiscoveryDocumentAndTryLogin(options: LoginOptions = null): Promise<boolean> {\n        return this.loadDiscoveryDocument().then(doc => {\n            return this.tryLogin(options);\n        });\n    }\n\n    /**\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\n     * IdToken or no valid AccessToken.\n     *\n     * @param options LoginOptions to pass through to `tryLogin(...)`\n     */\n    public loadDiscoveryDocumentAndLogin(options: LoginOptions & { state?: string } = null): Promise<boolean> {\n        if (!options) {\n            options = { state: '' };\n        }\n        return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n                if (this.responseType === 'code') {\n                    this.initCodeFlow();\n                } else {\n                    this.initImplicitFlow();\n                }\n                return false;\n            } else {\n                return true;\n            }\n        });\n    }\n\n    protected debug(...args): void {\n        if (this.showDebugInformation) {\n            this.logger.debug.apply(this.logger, args);\n        }\n    }\n\n    protected validateUrlFromDiscoveryDocument(url: string): string[] {\n        const errors: string[] = [];\n        const httpsCheck = this.validateUrlForHttps(url);\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\n\n        if (!httpsCheck) {\n            errors.push(\n                'https for all urls required. Also for urls received by discovery.'\n            );\n        }\n\n        if (!issuerCheck) {\n            errors.push(\n                'Every url in discovery document has to start with the issuer url.' +\n                'Also see property strictDiscoveryDocumentValidation.'\n            );\n        }\n\n        return errors;\n    }\n\n    protected validateUrlForHttps(url: string): boolean {\n        if (!url) {\n            return true;\n        }\n\n        const lcUrl = url.toLowerCase();\n\n        if (this.requireHttps === false) {\n            return true;\n        }\n\n        if (\n            (lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\n                lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\n            this.requireHttps === 'remoteOnly'\n        ) {\n            return true;\n        }\n\n        return lcUrl.startsWith('https://');\n    }\n\n    protected assertUrlNotNullAndCorrectProtocol(url: string | undefined, description: string) {\n        if (!url) {\n            throw new Error(`'${description}' should not be null`);\n        }\n        if (!this.validateUrlForHttps(url)) {\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n        }\n    }\n\n    protected validateUrlAgainstIssuer(url: string) {\n        if (!this.strictDiscoveryDocumentValidation) {\n            return true;\n        }\n        if (!url) {\n            return true;\n        }\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n    }\n\n    protected setupRefreshTimer(): void {\n        if (typeof window === 'undefined') {\n            this.debug('timer not supported on this plattform');\n            return;\n        }\n\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n            this.clearAccessTokenTimer();\n            this.clearIdTokenTimer();\n            this.setupExpirationTimers();\n        }\n\n        if (this.tokenReceivedSubscription)\n            this.tokenReceivedSubscription.unsubscribe();\n\n        this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\n            this.clearAccessTokenTimer();\n            this.clearIdTokenTimer();\n            this.setupExpirationTimers();\n        });\n    }\n\n    protected setupExpirationTimers(): void {\n        if (this.hasValidAccessToken()) {\n            this.setupAccessTokenTimer();\n        }\n\n\n        if (this.hasValidIdToken()) {\n            this.setupIdTokenTimer();\n        }\n    }\n\n    protected setupAccessTokenTimer(): void {\n\n        const expiration = this.getAccessTokenExpiration();\n        const storedAt = this.getAccessTokenStoredAt();\n        const timeout = this.calcTimeout(storedAt, expiration);\n\n        this.ngZone.runOutsideAngular(() => {\n            this.accessTokenTimeoutSubscription = of(\n                new OAuthInfoEvent('token_expires', 'access_token')\n            )\n                .pipe(delay(timeout))\n                .subscribe(e => {\n                    this.ngZone.run(() => {\n                        this.eventsSubject.next(e);\n                    });\n                });\n        });\n    }\n\n    protected setupIdTokenTimer(): void {\n\n        const expiration = this.getIdTokenExpiration();\n        const storedAt = this.getIdTokenStoredAt();\n        const timeout = this.calcTimeout(storedAt, expiration);\n\n        this.ngZone.runOutsideAngular(() => {\n            this.idTokenTimeoutSubscription = of(\n                new OAuthInfoEvent('token_expires', 'id_token')\n            )\n                .pipe(delay(timeout))\n                .subscribe(e => {\n                    this.ngZone.run(() => {\n                        this.eventsSubject.next(e);\n                    });\n                });\n        });\n    }\n\n    protected clearAccessTokenTimer(): void {\n        if (this.accessTokenTimeoutSubscription) {\n            this.accessTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n\n    protected clearIdTokenTimer(): void {\n        if (this.idTokenTimeoutSubscription) {\n            this.idTokenTimeoutSubscription.unsubscribe();\n        }\n    }\n\n    protected calcTimeout(storedAt: number, expiration: number): number {\n        const now = Date.now();\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n        return Math.max(0, delta);\n    }\n\n    /**\n     * DEPRECATED. Use a provider for OAuthStorage instead:\n     *\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\n     * Sets a custom storage used to store the received\n     * tokens on client side. By default, the browser's\n     * sessionStorage is used.\n     * @ignore\n     *\n     * @param storage\n     */\n    public setStorage(storage: OAuthStorage): void {\n        this._storage = storage;\n        this.configChanged();\n    }\n\n    /**\n     * Loads the discovery document to configure most\n     * properties of this service. The url of the discovery\n     * document is infered from the issuer's url according\n     * to the OpenId Connect spec. To use another url you\n     * can pass it to to optional parameter fullUrl.\n     *\n     * @param fullUrl\n     */\n    public loadDiscoveryDocument(fullUrl: string = null): Promise<OAuthSuccessEvent> {\n        return new Promise((resolve, reject) => {\n            if (!fullUrl) {\n                fullUrl = this.issuer || '';\n                if (!fullUrl.endsWith('/')) {\n                    fullUrl += '/';\n                }\n                fullUrl += '.well-known/openid-configuration';\n            }\n\n            if (!this.validateUrlForHttps(fullUrl)) {\n                reject('issuer  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\n                return;\n            }\n\n            this.http.get<OidcDiscoveryDoc>(fullUrl).subscribe(\n                doc => {\n                    if (!this.validateDiscoveryDocument(doc)) {\n                        this.eventsSubject.next(\n                            new OAuthErrorEvent('discovery_document_validation_error', null)\n                        );\n                        reject('discovery_document_validation_error');\n                        return;\n                    }\n\n                    this.loginUrl = doc.authorization_endpoint;\n                    this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n                    this.grantTypesSupported = doc.grant_types_supported;\n                    this.issuer = doc.issuer;\n                    this.tokenEndpoint = doc.token_endpoint;\n                    this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\n                    this.jwksUri = doc.jwks_uri;\n                    this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\n\n                    this.discoveryDocumentLoaded = true;\n                    this.discoveryDocumentLoadedSubject.next(doc);\n\n                    if (this.sessionChecksEnabled) {\n                        this.restartSessionChecksIfStillLoggedIn();\n                    }\n\n                    this.loadJwks()\n                        .then(jwks => {\n                            const result: object = {\n                                discoveryDocument: doc,\n                                jwks: jwks\n                            };\n\n                            const event = new OAuthSuccessEvent(\n                                'discovery_document_loaded',\n                                result\n                            );\n                            this.eventsSubject.next(event);\n                            resolve(event);\n                            return;\n                        })\n                        .catch(err => {\n                            this.eventsSubject.next(\n                                new OAuthErrorEvent('discovery_document_load_error', err)\n                            );\n                            reject(err);\n                            return;\n                        });\n                },\n                err => {\n                    this.logger.error('error loading discovery document', err);\n                    this.eventsSubject.next(\n                        new OAuthErrorEvent('discovery_document_load_error', err)\n                    );\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    protected loadJwks(): Promise<object> {\n        return new Promise<object>((resolve, reject) => {\n            if (this.jwksUri) {\n                this.http.get(this.jwksUri).subscribe(\n                    jwks => {\n                        this.jwks = jwks;\n                        this.eventsSubject.next(\n                            new OAuthSuccessEvent('discovery_document_loaded')\n                        );\n                        resolve(jwks);\n                    },\n                    err => {\n                        this.logger.error('error loading jwks', err);\n                        this.eventsSubject.next(\n                            new OAuthErrorEvent('jwks_load_error', err)\n                        );\n                        reject(err);\n                    }\n                );\n            } else {\n                resolve(null);\n            }\n        });\n    }\n\n    protected validateDiscoveryDocument(doc: OidcDiscoveryDoc): boolean {\n        let errors: string[];\n\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n            this.logger.error(\n                'invalid issuer in discovery document',\n                'expected: ' + this.issuer,\n                'current: ' + doc.issuer\n            );\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n        if (errors.length > 0) {\n            this.logger.error(\n                'error validating authorization_endpoint in discovery document',\n                errors\n            );\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n        if (errors.length > 0) {\n            this.logger.error(\n                'error validating end_session_endpoint in discovery document',\n                errors\n            );\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n        if (errors.length > 0) {\n            this.logger.error(\n                'error validating token_endpoint in discovery document',\n                errors\n            );\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n        if (errors.length > 0) {\n            this.logger.error(\n                'error validating userinfo_endpoint in discovery document',\n                errors\n            );\n            return false;\n        }\n\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n        if (errors.length > 0) {\n            this.logger.error('error validating jwks_uri in discovery document', errors);\n            return false;\n        }\n\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n            this.logger.warn(\n                'sessionChecksEnabled is activated but discovery document' +\n                ' does not contain a check_session_iframe field'\n            );\n        }\n\n        return true;\n    }\n\n    /**\n     * Uses password flow to exchange userName and password for an\n     * access_token. After receiving the access_token, this method\n     * uses it to query the userinfo endpoint in order to get information\n     * about the user in question.\n     *\n     * When using this, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take place that make this operation\n     * fail.\n     *\n     * @param userName\n     * @param password\n     * @param headers Optional additional http-headers.\n     */\n    public fetchTokenUsingPasswordFlowAndLoadUserProfile(\n        userName: string,\n        password: string,\n        headers: HttpHeaders = new HttpHeaders()\n    ): Promise<UserInfo> {\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(\n            () => this.loadUserProfile()\n        );\n    }\n\n    /**\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\n     *\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\n     * Otherwise stricter validations take place that make this operation fail.\n     */\n    public loadUserProfile(): Promise<UserInfo> {\n        if (!this.hasValidAccessToken()) {\n            throw new Error('Can not load User Profile without access_token');\n        }\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n            throw new Error('userinfoEndpoint must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\n        }\n\n        return new Promise((resolve, reject) => {\n            const headers = new HttpHeaders().set(\n                'Authorization',\n                'Bearer ' + this.getAccessToken()\n            );\n\n            this.http.get<UserInfo>(this.userinfoEndpoint, { headers }).subscribe(\n                info => {\n                    this.debug('userinfo received', info);\n\n                    const existingClaims = this.getIdentityClaims() || {};\n\n                    if (!this.skipSubjectCheck) {\n                        if (\n                            this.oidc &&\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])\n                        ) {\n                            const err =\n                                'if property oidc is true, the received user-id (sub) has to be the user-id ' +\n                                'of the user that has logged in with oidc.\\n' +\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\n\n                            reject(err);\n                            return;\n                        }\n                    }\n\n                    info = Object.assign({}, existingClaims, info);\n\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n                    resolve(info);\n                },\n                err => {\n                    this.logger.error('error loading user info', err);\n                    this.eventsSubject.next(\n                        new OAuthErrorEvent('user_profile_load_error', err)\n                    );\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    /**\n     * Uses password flow to exchange userName and password for an access_token.\n     * @param userName\n     * @param password\n     * @param headers Optional additional http-headers.\n     */\n    public fetchTokenUsingPasswordFlow(\n        userName: string,\n        password: string,\n        headers: HttpHeaders = new HttpHeaders()\n\n    ): Promise<TokenResponse> {\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n\n        return new Promise((resolve, reject) => {\n            /**\n             * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n             * serialize and parse URL parameter keys and values.\n             *\n             * @stable\n             */\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\n                .set('grant_type', 'password')\n                .set('scope', this.scope)\n                .set('username', userName)\n                .set('password', password);\n\n            if (this.useHttpBasicAuth) {\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n                headers = headers.set(\n                    'Authorization',\n                    'Basic ' + header);\n            }\n\n            if (!this.useHttpBasicAuth) {\n                params = params.set('client_id', this.clientId);\n            }\n\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n                params = params.set('client_secret', this.dummyClientSecret);\n            }\n\n            if (this.customQueryParams) {\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    params = params.set(key, this.customQueryParams[key]);\n                }\n            }\n\n            headers = headers.set(\n                'Content-Type',\n                'application/x-www-form-urlencoded'\n            );\n\n            this.http\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\n                .subscribe(\n                    tokenResponse => {\n                        this.debug('tokenResponse', tokenResponse);\n                        this.storeAccessTokenResponse(\n                            tokenResponse.access_token,\n                            tokenResponse.refresh_token,\n                            tokenResponse.expires_in,\n                            tokenResponse.scope,\n                            this.extractRecognizedCustomParameters(tokenResponse)\n                        );\n\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                        resolve(tokenResponse);\n                    },\n                    err => {\n                        this.logger.error('Error performing password flow', err);\n                        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n                        reject(err);\n                    }\n                );\n        });\n    }\n\n    /**\n     * Refreshes the token using a refresh_token.\n     * This does not work for implicit flow, b/c\n     * there is no refresh_token in this flow.\n     * A solution for this is provided by the\n     * method silentRefresh.\n     */\n    public refreshToken(): Promise<TokenResponse> {\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n\n        return new Promise((resolve, reject) => {\n            let params = new HttpParams()\n                .set('grant_type', 'refresh_token')\n                .set('scope', this.scope)\n                .set('refresh_token', this._storage.getItem('refresh_token'));\n\n            let headers = new HttpHeaders().set(\n                'Content-Type',\n                'application/x-www-form-urlencoded'\n            );\n\n            if (this.useHttpBasicAuth) {\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n                headers = headers.set(\n                    'Authorization',\n                    'Basic ' + header);\n            }\n\n            if (!this.useHttpBasicAuth) {\n                params = params.set('client_id', this.clientId);\n            }\n\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n                params = params.set('client_secret', this.dummyClientSecret);\n            }\n\n            if (this.customQueryParams) {\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    params = params.set(key, this.customQueryParams[key]);\n                }\n            }\n\n            this.http\n                .post<TokenResponse>(this.tokenEndpoint, params, { headers })\n                .pipe(switchMap(tokenResponse => {\n                    if (tokenResponse.id_token) {\n                        return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true))\n                            .pipe(\n                                tap(result => this.storeIdToken(result)),\n                                map(_ => tokenResponse)\n                            );\n                    } else {\n                        return of(tokenResponse);\n                    }\n                }))\n                .subscribe(\n                    tokenResponse => {\n                        this.debug('refresh tokenResponse', tokenResponse);\n                        this.storeAccessTokenResponse(\n                            tokenResponse.access_token,\n                            tokenResponse.refresh_token,\n                            tokenResponse.expires_in,\n                            tokenResponse.scope,\n                            this.extractRecognizedCustomParameters(tokenResponse)\n                        );\n\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n                        resolve(tokenResponse);\n                    },\n                    err => {\n                        this.logger.error('Error refreshing token', err);\n                        this.eventsSubject.next(\n                            new OAuthErrorEvent('token_refresh_error', err)\n                        );\n                        reject(err);\n                    }\n                );\n        });\n    }\n\n    protected removeSilentRefreshEventListener(): void {\n        if (this.silentRefreshPostMessageEventListener) {\n            window.removeEventListener(\n                'message',\n                this.silentRefreshPostMessageEventListener\n            );\n            this.silentRefreshPostMessageEventListener = null;\n        }\n    }\n\n    protected setupSilentRefreshEventListener(): void {\n        this.removeSilentRefreshEventListener();\n\n        this.silentRefreshPostMessageEventListener = (e: MessageEvent) => {\n            const message = this.processMessageEventMessage(e);\n\n            this.tryLogin({\n                customHashFragment: message,\n                preventClearHashAfterLogin: true,\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\n            }).catch(err => this.debug('tryLogin during silent refresh failed', err));\n        };\n\n        window.addEventListener(\n            'message',\n            this.silentRefreshPostMessageEventListener\n        );\n    }\n\n    /**\n     * Performs a silent refresh for implicit flow.\n     * Use this method to get new tokens when/before\n     * the existing tokens expire.\n     */\n    public silentRefresh(params: object = {}, noPrompt = true): Promise<OAuthEvent> {\n        const claims: object = this.getIdentityClaims() || {};\n\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n            params['id_token_hint'] = this.getIdToken();\n        }\n\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error('loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\n        }\n\n        if (typeof document === 'undefined') {\n            throw new Error('silent refresh is not supported on this platform');\n        }\n\n        const existingIframe = document.getElementById(\n            this.silentRefreshIFrameName\n        );\n\n        if (existingIframe) {\n            document.body.removeChild(existingIframe);\n        }\n\n        this.silentRefreshSubject = claims['sub'];\n\n        const iframe = document.createElement('iframe');\n        iframe.id = this.silentRefreshIFrameName;\n\n        this.setupSilentRefreshEventListener();\n\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\n            iframe.setAttribute('src', url);\n\n            if (!this.silentRefreshShowIFrame) {\n                iframe.style['display'] = 'none';\n            }\n            document.body.appendChild(iframe);\n        });\n\n        const errors = this.events.pipe(\n            filter(e => e instanceof OAuthErrorEvent),\n            first()\n        );\n        const success = this.events.pipe(\n            filter(e => e.type === 'token_received'),\n            first()\n        );\n        const timeout = of(\n            new OAuthErrorEvent('silent_refresh_timeout', null)\n        ).pipe(delay(this.silentRefreshTimeout));\n\n        return race([errors, success, timeout])\n            .pipe(\n                map(e => {\n                    if (e instanceof OAuthErrorEvent) {\n                        if (e.type === 'silent_refresh_timeout') {\n                            this.eventsSubject.next(e);\n                        } else {\n                            e = new OAuthErrorEvent('silent_refresh_error', e);\n                            this.eventsSubject.next(e);\n                        }\n                        throw e;\n                    } else if (e.type === 'token_received') {\n                        e = new OAuthSuccessEvent('silently_refreshed');\n                        this.eventsSubject.next(e);\n                    }\n                    return e;\n                })\n            )\n            .toPromise();\n    }\n\n    /**\n     * This method exists for backwards compatibility.\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\n     * and implicit flows.\n     */\n    public initImplicitFlowInPopup(options?: { height?: number, width?: number }) {\n        return this.initLoginFlowInPopup(options);\n    }\n\n    public initLoginFlowInPopup(options?: { height?: number, width?: number }) {\n        options = options || {};\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n            display: 'popup'\n        }).then(url => {\n            return new Promise((resolve, reject) => {\n                /**\n                 * Error handling section\n                 */\n                const checkForPopupClosedInterval = 500;\n                let windowRef = window.open(url, '_blank', this.calculatePopupFeatures(options));\n                let checkForPopupClosedTimer: any;\n                const checkForPopupClosed = () => {\n                    if (!windowRef || windowRef.closed) {\n                        cleanup();\n                        reject(new OAuthErrorEvent('popup_closed', {}));\n                    }\n                };\n                if (!windowRef) {\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\n                } else {\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n                }\n\n                const cleanup = () => {\n                    window.clearInterval(checkForPopupClosedTimer);\n                    window.removeEventListener('message', listener);\n                    if (windowRef !== null) {\n                        windowRef.close();\n                    }\n                    windowRef = null;\n                };\n\n                const listener = (e: MessageEvent) => {\n                    const message = this.processMessageEventMessage(e);\n\n                    if (message && message !== null) {\n                        this.tryLogin({\n                            customHashFragment: message,\n                            preventClearHashAfterLogin: true,\n                            customRedirectUri: this.silentRefreshRedirectUri,\n                        }).then(() => {\n                            cleanup();\n                            resolve();\n                        }, err => {\n                            cleanup();\n                            reject(err);\n                        });\n                    } else {\n                        console.log('false event firing');\n                    }\n\n                };\n\n                window.addEventListener('message', listener);\n            });\n        });\n    }\n\n    protected calculatePopupFeatures(options: { height?: number, width?: number }): string {\n        // Specify an static height and width and calculate centered position\n\n        const height = options.height || 470;\n        const width = options.width || 500;\n        const left = window.screenLeft + ((window.outerWidth - width) / 2);\n        const top = window.screenTop + ((window.outerHeight - height) / 2);\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n    }\n\n    protected processMessageEventMessage(e: MessageEvent): string {\n        let expectedPrefix = '#';\n\n        if (this.silentRefreshMessagePrefix) {\n            expectedPrefix += this.silentRefreshMessagePrefix;\n        }\n\n        if (!e || !e.data || typeof e.data !== 'string') {\n            return;\n        }\n\n        const prefixedMessage: string = e.data;\n\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\n            return;\n        }\n\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\n    }\n\n    protected canPerformSessionCheck(): boolean {\n        if (!this.sessionChecksEnabled) {\n            return false;\n        }\n        if (!this.sessionCheckIFrameUrl) {\n            console.warn(\n                'sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl'\n            );\n            return false;\n        }\n        const sessionState = this.getSessionState();\n        if (!sessionState) {\n            console.warn(\n                'sessionChecksEnabled is activated but there is no session_state'\n            );\n            return false;\n        }\n        if (typeof document === 'undefined') {\n            return false;\n        }\n\n        return true;\n    }\n\n    protected setupSessionCheckEventListener(): void {\n        this.removeSessionCheckEventListener();\n\n        this.sessionCheckEventListener = (e: MessageEvent) => {\n            const origin = e.origin.toLowerCase();\n            const issuer = this.issuer.toLowerCase();\n\n            this.debug('sessionCheckEventListener');\n\n            if (!issuer.startsWith(origin)) {\n                this.debug(\n                    'sessionCheckEventListener',\n                    'wrong origin',\n                    origin,\n                    'expected',\n                    issuer\n                );\n\n                return;\n            }\n\n            // only run in Angular zone if it is 'changed' or 'error'\n            switch (e.data) {\n                case 'unchanged':\n                    this.handleSessionUnchanged();\n                    break;\n                case 'changed':\n                    this.ngZone.run(() => {\n                        this.handleSessionChange();\n                    });\n                    break;\n                case 'error':\n                    this.ngZone.run(() => {\n                        this.handleSessionError();\n                    });\n                    break;\n            }\n\n            this.debug('got info from session check inframe', e);\n        };\n\n        // prevent Angular from refreshing the view on every message (runs in intervals)\n        this.ngZone.runOutsideAngular(() => {\n            window.addEventListener('message', this.sessionCheckEventListener);\n        });\n    }\n\n    protected handleSessionUnchanged(): void {\n        this.debug('session check', 'session unchanged');\n    }\n\n    protected handleSessionChange(): void {\n        /* events: session_changed, relogin, stopTimer, logged_out*/\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n        this.stopSessionCheckTimer();\n        if (this.silentRefreshRedirectUri) {\n            this.silentRefresh().catch(_ =>\n                this.debug('silent refresh failed after session changed')\n            );\n            this.waitForSilentRefreshAfterSessionChange();\n        } else {\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n            this.logOut(true);\n        }\n    }\n\n    protected waitForSilentRefreshAfterSessionChange(): void {\n        this.events\n            .pipe(\n                filter(\n                    (e: OAuthEvent) =>\n                        e.type === 'silently_refreshed' ||\n                        e.type === 'silent_refresh_timeout' ||\n                        e.type === 'silent_refresh_error'\n                ),\n                first()\n            )\n            .subscribe(e => {\n                if (e.type !== 'silently_refreshed') {\n                    this.debug('silent refresh did not work after session changed');\n                    this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n                    this.logOut(true);\n                }\n            });\n    }\n\n    protected handleSessionError(): void {\n        this.stopSessionCheckTimer();\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n    }\n\n    protected removeSessionCheckEventListener(): void {\n        if (this.sessionCheckEventListener) {\n            window.removeEventListener('message', this.sessionCheckEventListener);\n            this.sessionCheckEventListener = null;\n        }\n    }\n\n    protected initSessionCheck(): void {\n        if (!this.canPerformSessionCheck()) {\n            return;\n        }\n\n        const existingIframe = document.getElementById(this.sessionCheckIFrameName);\n        if (existingIframe) {\n            document.body.removeChild(existingIframe);\n        }\n\n        const iframe = document.createElement('iframe');\n        iframe.id = this.sessionCheckIFrameName;\n\n        this.setupSessionCheckEventListener();\n\n        const url = this.sessionCheckIFrameUrl;\n        iframe.setAttribute('src', url);\n        iframe.style.display = 'none';\n        document.body.appendChild(iframe);\n\n        this.startSessionCheckTimer();\n    }\n\n    protected startSessionCheckTimer(): void {\n        this.stopSessionCheckTimer();\n        this.ngZone.runOutsideAngular(() => {\n            this.sessionCheckTimer = setInterval(\n                this.checkSession.bind(this),\n                this.sessionCheckIntervall\n            );\n        });\n    }\n\n    protected stopSessionCheckTimer(): void {\n        if (this.sessionCheckTimer) {\n            clearInterval(this.sessionCheckTimer);\n            this.sessionCheckTimer = null;\n        }\n    }\n\n    protected checkSession(): void {\n        const iframe: any = document.getElementById(this.sessionCheckIFrameName);\n\n        if (!iframe) {\n            this.logger.warn(\n                'checkSession did not find iframe',\n                this.sessionCheckIFrameName\n            );\n        }\n\n        const sessionState = this.getSessionState();\n\n        if (!sessionState) {\n            this.stopSessionCheckTimer();\n        }\n\n        const message = this.clientId + ' ' + sessionState;\n        iframe.contentWindow.postMessage(message, this.issuer);\n    }\n\n    protected async createLoginUrl(\n        state = '',\n        loginHint = '',\n        customRedirectUri = '',\n        noPrompt = false,\n        params: object = {}\n    ): Promise<string> {\n        const that = this;\n\n        let redirectUri: string;\n\n        if (customRedirectUri) {\n            redirectUri = customRedirectUri;\n        } else {\n            redirectUri = this.redirectUri;\n        }\n\n        const nonce = await this.createAndSaveNonce();\n\n        if (state) {\n            state = nonce + this.config.nonceStateSeparator + state;\n        } else {\n            state = nonce;\n        }\n\n        if (!this.requestAccessToken && !this.oidc) {\n            throw new Error(\n                'Either requestAccessToken or oidc or both must be true'\n            );\n        }\n\n        if (this.config.responseType) {\n            this.responseType = this.config.responseType;\n        } else {\n            if (this.oidc && this.requestAccessToken) {\n                this.responseType = 'id_token token';\n            } else if (this.oidc && !this.requestAccessToken) {\n                this.responseType = 'id_token';\n            } else {\n                this.responseType = 'token';\n            }\n        }\n\n        const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n\n        let scope = that.scope;\n\n        if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n            scope = 'openid ' + scope;\n        }\n\n        let url =\n            that.loginUrl +\n            seperationChar +\n            'response_type=' +\n            encodeURIComponent(that.responseType) +\n            '&client_id=' +\n            encodeURIComponent(that.clientId) +\n            '&state=' +\n            encodeURIComponent(state) +\n            '&redirect_uri=' +\n            encodeURIComponent(redirectUri) +\n            '&scope=' +\n            encodeURIComponent(scope);\n\n        if (this.responseType === 'code' && !this.disablePKCE) {\n            const [challenge, verifier] = await this.createChallangeVerifierPairForPKCE();\n            this._storage.setItem('PKCI_verifier', verifier);\n            url += '&code_challenge=' + challenge;\n            url += '&code_challenge_method=S256';\n        }\n\n        if (loginHint) {\n            url += '&login_hint=' + encodeURIComponent(loginHint);\n        }\n\n        if (that.resource) {\n            url += '&resource=' + encodeURIComponent(that.resource);\n        }\n\n        if (that.oidc) {\n            url += '&nonce=' + encodeURIComponent(nonce);\n        }\n\n        if (noPrompt) {\n            url += '&prompt=none';\n        }\n\n        for (const key of Object.keys(params)) {\n            url +=\n                '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }\n\n        if (this.customQueryParams) {\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                url +=\n                    '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\n            }\n        }\n\n        return url;\n\n    }\n\n    initImplicitFlowInternal(\n        additionalState = '',\n        params: string | object = ''\n    ): void {\n        if (this.inImplicitFlow) {\n            return;\n        }\n\n        this.inImplicitFlow = true;\n\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error(\n                'loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).'\n            );\n        }\n\n        let addParams: object = {};\n        let loginHint: string = null;\n\n        if (typeof params === 'string') {\n            loginHint = params;\n        } else if (typeof params === 'object') {\n            addParams = params;\n        }\n\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\n            .then(this.config.openUri)\n            .catch(error => {\n                console.error('Error in initImplicitFlow', error);\n                this.inImplicitFlow = false;\n            });\n    }\n\n    /**\n     * Starts the implicit flow and redirects to user to\n     * the auth servers' login url.\n     *\n     * @param additionalState Optional state that is passed around.\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\n     * @param params Hash with additional parameter. If it is a string, it is used for the\n     *               parameter loginHint (for the sake of compatibility with former versions)\n     */\n    public initImplicitFlow(\n        additionalState = '',\n        params: string | object = ''\n    ): void {\n        if (this.loginUrl !== '') {\n            this.initImplicitFlowInternal(additionalState, params);\n        } else {\n            this.events\n                .pipe(filter(e => e.type === 'discovery_document_loaded'))\n                .subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\n        }\n    }\n\n    /**\n     * Reset current implicit flow\n     *\n     * @description This method allows resetting the current implict flow in order to be initialized again.\n     */\n    public resetImplicitFlow(): void {\n        this.inImplicitFlow = false;\n    }\n\n    protected callOnTokenReceivedIfExists(options: LoginOptions): void {\n        const that = this;\n        if (options.onTokenReceived) {\n            const tokenParams = {\n                idClaims: that.getIdentityClaims(),\n                idToken: that.getIdToken(),\n                accessToken: that.getAccessToken(),\n                state: that.state\n            };\n            options.onTokenReceived(tokenParams);\n        }\n    }\n\n    protected storeAccessTokenResponse(\n        accessToken: string,\n        refreshToken: string,\n        expiresIn: number,\n        grantedScopes: String,\n        customParameters?: Map<String, String>\n    ): void {\n        this._storage.setItem('access_token', accessToken);\n        if (grantedScopes) {\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split('+')));\n        }\n        this._storage.setItem('access_token_stored_at', '' + Date.now());\n        if (expiresIn) {\n            const expiresInMilliSeconds = expiresIn * 1000;\n            const now = new Date();\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\n            this._storage.setItem('expires_at', '' + expiresAt);\n        }\n\n        if (refreshToken) {\n            this._storage.setItem('refresh_token', refreshToken);\n        }\n        if (customParameters) {\n            customParameters.forEach((value : string, key: string) => {\n              this._storage.setItem(key, value);\n            });\n        }\n    }\n\n    /**\n     * Delegates to tryLoginImplicitFlow for the sake of competability\n     * @param options Optional options.\n     */\n    public tryLogin(options: LoginOptions = null): Promise<boolean> {\n        if (this.config.responseType === 'code') {\n            return this.tryLoginCodeFlow(options).then(_ => true);\n        }\n        else {\n            return this.tryLoginImplicitFlow(options);\n        }\n    }\n\n\n\n    private parseQueryString(queryString: string): object {\n        if (!queryString || queryString.length === 0) {\n            return {};\n        }\n\n        if (queryString.charAt(0) === '?') {\n            queryString = queryString.substr(1);\n        }\n\n        return this.urlHelper.parseQueryString(queryString);\n\n\n    }\n\n    public tryLoginCodeFlow(options: LoginOptions = null): Promise<void> {\n        options = options || {};\n\n        const querySource = options.customHashFragment ?\n            options.customHashFragment.substring(1) :\n            window.location.search;\n\n        const parts = this.getCodePartsFromUrl(window.location.search);\n\n        const code = parts['code'];\n        const state = parts['state'];\n\n        if (!options.preventClearHashAfterLogin) {\n            const href = location.href\n                .replace(/[&\\?]code=[^&\\$]*/, '')\n                .replace(/[&\\?]scope=[^&\\$]*/, '')\n                .replace(/[&\\?]state=[^&\\$]*/, '')\n                .replace(/[&\\?]session_state=[^&\\$]*/, '');\n\n            history.replaceState(null, window.name, href);\n        }\n\n        let [nonceInState, userState] = this.parseState(state);\n        this.state = userState;\n\n        if (parts['error']) {\n            this.debug('error trying to login');\n            this.handleLoginError({}, parts);\n            const err = new OAuthErrorEvent('code_error', {}, parts);\n            this.eventsSubject.next(err);\n            return Promise.reject(err);\n        }\n\n        if (!nonceInState) {\n            return Promise.resolve();\n        }\n\n        const success = this.validateNonce(nonceInState);\n        if (!success) {\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n            this.eventsSubject.next(event);\n            return Promise.reject(event);\n        }\n\n        if (code) {\n            return new Promise((resolve, reject) => {\n                this.getTokenFromCode(code, options).then(result => {\n                    resolve();\n                }).catch(err => {\n                    reject(err);\n                });\n            });\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n    * Retrieve the returned auth code from the redirect uri that has been called.\n    * If required also check hash, as we could use hash location strategy.\n    */\n    private getCodePartsFromUrl(queryString: string): object {\n        if (!queryString || queryString.length === 0) {\n            return this.urlHelper.getHashFragmentParams();\n        }\n\n        // normalize query string\n        if (queryString.charAt(0) === '?') {\n            queryString = queryString.substr(1);\n        }\n\n        return this.urlHelper.parseQueryString(queryString);\n    }\n\n    /**\n     * Get token using an intermediate code. Works for the Authorization Code flow.\n     */\n    private getTokenFromCode(code: string, options: LoginOptions): Promise<object> {\n        let params = new HttpParams()\n            .set('grant_type', 'authorization_code')\n            .set('code', code)\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\n\n        if (!this.disablePKCE) {\n            const pkciVerifier = this._storage.getItem('PKCI_verifier');\n\n            if (!pkciVerifier) {\n                console.warn('No PKCI verifier found in oauth storage!');\n            } else {\n                params = params.set('code_verifier', pkciVerifier);\n            }\n        }\n\n        return this.fetchAndProcessToken(params);\n    }\n\n    private fetchAndProcessToken(params: HttpParams): Promise<TokenResponse> {\n\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n        let headers = new HttpHeaders()\n            .set('Content-Type', 'application/x-www-form-urlencoded');\n\n        if (this.useHttpBasicAuth) {\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n            headers = headers.set(\n                'Authorization',\n                'Basic ' + header);\n        }\n\n        if (!this.useHttpBasicAuth) {\n            params = params.set('client_id', this.clientId);\n        }\n\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n            params = params.set('client_secret', this.dummyClientSecret);\n        }\n\n        return new Promise((resolve, reject) => {\n\n            if (this.customQueryParams) {\n                for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\n                    params = params.set(key, this.customQueryParams[key]);\n                }\n            }\n\n            this.http.post<TokenResponse>(this.tokenEndpoint, params, { headers }).subscribe(\n                (tokenResponse) => {\n                    this.debug('refresh tokenResponse', tokenResponse);\n                    this.storeAccessTokenResponse(\n                        tokenResponse.access_token,\n                        tokenResponse.refresh_token,\n                        tokenResponse.expires_in,\n                        tokenResponse.scope,\n                        this.extractRecognizedCustomParameters(tokenResponse));\n\n                    if (this.oidc && tokenResponse.id_token) {\n                        this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).\n                            then(result => {\n                                this.storeIdToken(result);\n\n                                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n\n                                resolve(tokenResponse);\n                            })\n                            .catch(reason => {\n                                this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n                                console.error('Error validating tokens');\n                                console.error(reason);\n\n                                reject(reason);\n                            });\n                    } else {\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n\n                        resolve(tokenResponse);\n                    }\n                },\n                (err) => {\n                    console.error('Error getting token', err);\n                    this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n                    reject(err);\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks whether there are tokens in the hash fragment\n     * as a result of the implicit flow. These tokens are\n     * parsed, validated and used to sign the user in to the\n     * current client.\n     *\n     * @param options Optional options.\n     */\n    public tryLoginImplicitFlow(options: LoginOptions = null): Promise<boolean> {\n        options = options || {};\n\n        let parts: object;\n\n        if (options.customHashFragment) {\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n        } else {\n            parts = this.urlHelper.getHashFragmentParams();\n        }\n\n        this.debug('parsed url', parts);\n\n        const state = parts['state'];\n\n        let [nonceInState, userState] = this.parseState(state);\n        this.state = userState;\n\n        if (parts['error']) {\n            this.debug('error trying to login');\n            this.handleLoginError(options, parts);\n            const err = new OAuthErrorEvent('token_error', {}, parts);\n            this.eventsSubject.next(err);\n            return Promise.reject(err);\n        }\n\n        const accessToken = parts['access_token'];\n        const idToken = parts['id_token'];\n        const sessionState = parts['session_state'];\n        const grantedScopes = parts['scope'];\n\n        if (!this.requestAccessToken && !this.oidc) {\n            return Promise.reject(\n                'Either requestAccessToken or oidc (or both) must be true.'\n            );\n        }\n\n        if (this.requestAccessToken && !accessToken) {\n            return Promise.resolve(false);\n        }\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n            return Promise.resolve(false);\n        }\n        if (this.oidc && !idToken) {\n            return Promise.resolve(false);\n        }\n\n        if (this.sessionChecksEnabled && !sessionState) {\n            this.logger.warn(\n                'session checks (Session Status Change Notification) ' +\n                'were activated in the configuration but the id_token ' +\n                'does not contain a session_state claim'\n            );\n        }\n\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck) {\n            const success = this.validateNonce(nonceInState);\n\n            if (!success) {\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n                this.eventsSubject.next(event);\n                return Promise.reject(event);\n            }\n        }\n\n        if (this.requestAccessToken) {\n            this.storeAccessTokenResponse(\n                accessToken,\n                null,\n                parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec,\n                grantedScopes\n            );\n        }\n\n        if (!this.oidc) {\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n                location.hash = '';\n            }\n\n            this.callOnTokenReceivedIfExists(options);\n            return Promise.resolve(true);\n\n        }\n\n        return this.processIdToken(idToken, accessToken)\n            .then(result => {\n                if (options.validationHandler) {\n                    return options\n                        .validationHandler({\n                            accessToken: accessToken,\n                            idClaims: result.idTokenClaims,\n                            idToken: result.idToken,\n                            state: state\n                        })\n                        .then(_ => result);\n                }\n                return result;\n            })\n            .then(result => {\n                this.storeIdToken(result);\n                this.storeSessionState(sessionState);\n                if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n                    location.hash = '';\n                }\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n                this.callOnTokenReceivedIfExists(options);\n                this.inImplicitFlow = false;\n                return true;\n            })\n            .catch(reason => {\n                this.eventsSubject.next(\n                    new OAuthErrorEvent('token_validation_error', reason)\n                );\n                this.logger.error('Error validating tokens');\n                this.logger.error(reason);\n                return Promise.reject(reason);\n            });\n    }\n\n    private parseState(state: string): [string, string] {\n        let nonce = state;\n        let userState = '';\n\n        if (state) {\n            const idx = state.indexOf(this.config.nonceStateSeparator);\n            if (idx > -1) {\n                nonce = state.substr(0, idx);\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\n            }\n        }\n        return [nonce, userState];\n    }\n\n    protected validateNonce(\n        nonceInState: string\n    ): boolean {\n        const savedNonce = this._storage.getItem('nonce');\n        if (savedNonce !== nonceInState) {\n\n            const err = 'Validating access_token failed, wrong state/nonce.';\n            console.error(err, savedNonce, nonceInState);\n            return false;\n        }\n        return true;\n    }\n\n    protected storeIdToken(idToken: ParsedIdToken): void {\n        this._storage.setItem('id_token', idToken.idToken);\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n        this._storage.setItem('id_token_stored_at', '' + Date.now());\n    }\n\n    protected storeSessionState(sessionState: string): void {\n        this._storage.setItem('session_state', sessionState);\n    }\n\n    protected getSessionState(): string {\n        return this._storage.getItem('session_state');\n    }\n\n    protected handleLoginError(options: LoginOptions, parts: object): void {\n        if (options.onLoginError) {\n            options.onLoginError(parts);\n        }\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n            location.hash = '';\n        }\n    }\n\n    /**\n     * @ignore\n     */\n    public processIdToken(\n        idToken: string,\n        accessToken: string,\n        skipNonceCheck = false\n    ): Promise<ParsedIdToken> {\n        const tokenParts = idToken.split('.');\n        const headerBase64 = this.padBase64(tokenParts[0]);\n        const headerJson = b64DecodeUnicode(headerBase64);\n        const header = JSON.parse(headerJson);\n        const claimsBase64 = this.padBase64(tokenParts[1]);\n        const claimsJson = b64DecodeUnicode(claimsBase64);\n        const claims = JSON.parse(claimsJson);\n        const savedNonce = this._storage.getItem('nonce');\n\n        if (Array.isArray(claims.aud)) {\n            if (claims.aud.every(v => v !== this.clientId)) {\n                const err = 'Wrong audience: ' + claims.aud.join(',');\n                this.logger.warn(err);\n                return Promise.reject(err);\n            }\n        } else {\n            if (claims.aud !== this.clientId) {\n                const err = 'Wrong audience: ' + claims.aud;\n                this.logger.warn(err);\n                return Promise.reject(err);\n            }\n        }\n\n        if (!claims.sub) {\n            const err = 'No sub claim in id_token';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n\n        /* For now, we only check whether the sub against\n         * silentRefreshSubject when sessionChecksEnabled is on\n         * We will reconsider in a later version to do this\n         * in every other case too.\n         */\n        if (\n            this.sessionChecksEnabled &&\n            this.silentRefreshSubject &&\n            this.silentRefreshSubject !== claims['sub']\n        ) {\n            const err =\n                'After refreshing, we got an id_token for another user (sub). ' +\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${\n                claims['sub']\n                }`;\n\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n\n        if (!claims.iat) {\n            const err = 'No iat claim in id_token';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n            const err = 'Wrong issuer: ' + claims.iss;\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\n            const err = 'Wrong nonce: ' + claims.nonce;\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n        // at_hash is not applicable to authorization code flow\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n        if (this.hasOwnProperty('responseType') && this.responseType === 'code') {\n            this.disableAtHashCheck = true;\n        }\n        if (\n            !this.disableAtHashCheck &&\n            this.requestAccessToken &&\n            !claims['at_hash']\n        ) {\n            const err = 'An at_hash is needed!';\n            this.logger.warn(err);\n            return Promise.reject(err);\n        }\n\n        const now = Date.now();\n        const issuedAtMSec = claims.iat * 1000;\n        const expiresAtMSec = claims.exp * 1000;\n        const clockSkewInMSec = (this.clockSkewInSec || 600) * 1000;\n\n        if (\n            issuedAtMSec - clockSkewInMSec >= now ||\n            expiresAtMSec + clockSkewInMSec <= now\n        ) {\n            const err = 'Token has expired';\n            console.error(err);\n            console.error({\n                now: now,\n                issuedAtMSec: issuedAtMSec,\n                expiresAtMSec: expiresAtMSec\n            });\n            return Promise.reject(err);\n        }\n\n        const validationParams: ValidationParams = {\n            accessToken: accessToken,\n            idToken: idToken,\n            jwks: this.jwks,\n            idTokenClaims: claims,\n            idTokenHeader: header,\n            loadKeys: () => this.loadJwks()\n        };\n\n        if (this.disableAtHashCheck) {\n            return this.checkSignature(validationParams).then(_ => {\n                const result: ParsedIdToken = {\n                    idToken: idToken,\n                    idTokenClaims: claims,\n                    idTokenClaimsJson: claimsJson,\n                    idTokenHeader: header,\n                    idTokenHeaderJson: headerJson,\n                    idTokenExpiresAt: expiresAtMSec\n                };\n                return result;\n            });\n        }\n\n        return this.checkAtHash(validationParams)\n            .then(atHashValid => {\n                if (\n                    !this.disableAtHashCheck &&\n                    this.requestAccessToken &&\n                    !atHashValid\n                ) {\n                    const err = 'Wrong at_hash';\n                    this.logger.warn(err);\n                    return Promise.reject(err);\n                }\n\n                return this.checkSignature(validationParams).then(_ => {\n                    const atHashCheckEnabled = !this.disableAtHashCheck;\n                    const result: ParsedIdToken = {\n                        idToken: idToken,\n                        idTokenClaims: claims,\n                        idTokenClaimsJson: claimsJson,\n                        idTokenHeader: header,\n                        idTokenHeaderJson: headerJson,\n                        idTokenExpiresAt: expiresAtMSec\n                    };\n                    if (atHashCheckEnabled) {\n                        return this.checkAtHash(validationParams).then(atHashValid => {\n                            if (this.requestAccessToken && !atHashValid) {\n                                const err = 'Wrong at_hash';\n                                this.logger.warn(err);\n                                return Promise.reject(err);\n                            } else {\n                                return result;\n                            }\n                        });\n                    } else {\n                        return result;\n                    }\n                });\n            });\n    }\n\n    /**\n     * Returns the received claims about the user.\n     */\n    public getIdentityClaims(): object {\n        const claims = this._storage.getItem('id_token_claims_obj');\n        if (!claims) {\n            return null;\n        }\n        return JSON.parse(claims);\n    }\n\n    /**\n     * Returns the granted scopes from the server.\n     */\n    public getGrantedScopes(): object {\n        const scopes = this._storage.getItem('granted_scopes');\n        if (!scopes) {\n            return null;\n        }\n        return JSON.parse(scopes);\n    }\n\n    /**\n     * Returns the current id_token.\n     */\n    public getIdToken(): string {\n        return this._storage\n            ? this._storage.getItem('id_token')\n            : null;\n    }\n\n    protected padBase64(base64data): string {\n        while (base64data.length % 4 !== 0) {\n            base64data += '=';\n        }\n        return base64data;\n    }\n\n    /**\n     * Returns the current access_token.\n     */\n    public getAccessToken(): string {\n        return this._storage\n            ? this._storage.getItem('access_token')\n            : null;\n    }\n\n    public getRefreshToken(): string {\n        return this._storage\n            ? this._storage.getItem('refresh_token')\n            : null;\n    }\n\n    /**\n     * Returns the expiration date of the access_token\n     * as milliseconds since 1970.\n     */\n    public getAccessTokenExpiration(): number {\n        if (!this._storage.getItem('expires_at')) {\n            return null;\n        }\n        return parseInt(this._storage.getItem('expires_at'), 10);\n    }\n\n    protected getAccessTokenStoredAt(): number {\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n    }\n\n    protected getIdTokenStoredAt(): number {\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n    }\n\n    /**\n     * Returns the expiration date of the id_token\n     * as milliseconds since 1970.\n     */\n    public getIdTokenExpiration(): number {\n        if (!this._storage.getItem('id_token_expires_at')) {\n            return null;\n        }\n\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n    }\n\n    /**\n     * Checkes, whether there is a valid access_token.\n     */\n    public hasValidAccessToken(): boolean {\n        if (this.getAccessToken()) {\n            const expiresAt = this._storage.getItem('expires_at');\n            const now = new Date();\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\n                return false;\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether there is a valid id_token.\n     */\n    public hasValidIdToken(): boolean {\n        if (this.getIdToken()) {\n            const expiresAt = this._storage.getItem('id_token_expires_at');\n            const now = new Date();\n            if (expiresAt && parseInt(expiresAt, 10) < now.getTime()) {\n                return false;\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\n     */\n    public getCustomTokenResponseProperty(requestedProperty: string): any {\n      return this._storage && this.config.customTokenParameters\n          && (this.config.customTokenParameters.indexOf(requestedProperty) >= 0)\n            && this._storage.getItem(requestedProperty) !== null\n            ? JSON.parse(this._storage.getItem(requestedProperty)) : null;\n    }\n\n    /**\n     * Returns the auth-header that can be used\n     * to transmit the access_token to a service\n     */\n    public authorizationHeader(): string {\n        return 'Bearer ' + this.getAccessToken();\n    }\n\n    /**\n     * Removes all tokens and logs the user out.\n     * If a logout url is configured, the user is\n     * redirected to it.\n     * @param noRedirectToLogoutUrl\n     */\n    public logOut(noRedirectToLogoutUrl = false): void {\n        const id_token = this.getIdToken();\n        this._storage.removeItem('access_token');\n        this._storage.removeItem('id_token');\n        this._storage.removeItem('refresh_token');\n        this._storage.removeItem('nonce');\n        this._storage.removeItem('expires_at');\n        this._storage.removeItem('id_token_claims_obj');\n        this._storage.removeItem('id_token_expires_at');\n        this._storage.removeItem('id_token_stored_at');\n        this._storage.removeItem('access_token_stored_at');\n        this._storage.removeItem('granted_scopes');\n        this._storage.removeItem('session_state');\n        if (this.config.customTokenParameters) {\n          this.config.customTokenParameters.forEach(customParam => this._storage.removeItem(customParam));\n        }\n        this.silentRefreshSubject = null;\n\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\n\n        if (!this.logoutUrl) {\n            return;\n        }\n        if (noRedirectToLogoutUrl) {\n            return;\n        }\n\n        if (!id_token && !this.postLogoutRedirectUri) {\n            return;\n        }\n\n        let logoutUrl: string;\n\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\n            throw new Error(\n                'logoutUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).'\n            );\n        }\n\n        // For backward compatibility\n        if (this.logoutUrl.indexOf('{{') > -1) {\n            logoutUrl = this.logoutUrl\n                .replace(/\\{\\{id_token\\}\\}/, id_token)\n                .replace(/\\{\\{client_id\\}\\}/, this.clientId);\n        } else {\n\n            let params = new HttpParams();\n\n            if (id_token) {\n                params = params.set('id_token_hint', id_token);\n            }\n\n            const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUri;\n            if (postLogoutUrl) {\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\n            }\n\n            logoutUrl =\n                this.logoutUrl +\n                (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\n                params.toString();\n        }\n        this.config.openUri(logoutUrl);\n    }\n\n    /**\n     * @ignore\n     */\n    public createAndSaveNonce(): Promise<string> {\n        const that = this;\n        return this.createNonce().then(function (nonce: any) {\n            that._storage.setItem('nonce', nonce);\n            return nonce;\n        });\n    }\n\n    /**\n     * @ignore\n     */\n    public ngOnDestroy(): void {\n        this.clearAccessTokenTimer();\n        this.clearIdTokenTimer();\n\n        this.removeSilentRefreshEventListener();\n        const silentRefreshFrame = document.getElementById(this.silentRefreshIFrameName);\n        if (silentRefreshFrame) {\n            silentRefreshFrame.remove();\n        }\n\n        this.stopSessionCheckTimer();\n        this.removeSessionCheckEventListener();\n        const sessionCheckFrame = document.getElementById(this.sessionCheckIFrameName);\n        if (sessionCheckFrame) {\n            sessionCheckFrame.remove();\n        }\n    }\n\n    protected createNonce(): Promise<string> {\n        return new Promise((resolve) => {\n            if (this.rngUrl) {\n                throw new Error(\n                    'createNonce with rng-web-api has not been implemented so far'\n                );\n            }\n\n            /*\n             * This alphabet is from:\n             * https://tools.ietf.org/html/rfc7636#section-4.1\n             *\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\n             */\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n            let size = 45;\n            let id = '';\n\n            const crypto = typeof self === 'undefined' ? null : (self.crypto || self['msCrypto']);\n            if (crypto) {\n                let bytes = new Uint8Array(size);\n                crypto.getRandomValues(bytes);\n                bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\n                id = String.fromCharCode.apply(null, bytes);\n            } else {\n                while (0 < size--) {\n                    id += unreserved[Math.random() * unreserved.length | 0];\n                }\n            }\n\n            resolve(base64UrlEncode(id));\n        });\n    }\n\n    protected async checkAtHash(params: ValidationParams): Promise<boolean> {\n        if (!this.tokenValidationHandler) {\n            this.logger.warn(\n                'No tokenValidationHandler configured. Cannot check at_hash.'\n            );\n            return true;\n        }\n        return this.tokenValidationHandler.validateAtHash(params);\n    }\n\n    protected checkSignature(params: ValidationParams): Promise<any> {\n        if (!this.tokenValidationHandler) {\n            this.logger.warn(\n                'No tokenValidationHandler configured. Cannot check signature.'\n            );\n            return Promise.resolve(null);\n        }\n        return this.tokenValidationHandler.validateSignature(params);\n    }\n\n\n    /**\n     * Start the implicit flow or the code flow,\n     * depending on your configuration.\n     */\n    public initLoginFlow(\n        additionalState = '',\n        params = {}\n    ): void {\n        if (this.responseType === 'code') {\n            return this.initCodeFlow(additionalState, params);\n        } else {\n            return this.initImplicitFlow(additionalState, params);\n        }\n    }\n\n    /**\n     * Starts the authorization code flow and redirects to user to\n     * the auth servers login url.\n     */\n    public initCodeFlow(\n        additionalState = '',\n        params = {}\n    ): void {\n        if (this.loginUrl !== '') {\n            this.initCodeFlowInternal(additionalState, params);\n        } else {\n            this.events.pipe(filter(e => e.type === 'discovery_document_loaded'))\n                .subscribe(_ => this.initCodeFlowInternal(additionalState, params));\n        }\n    }\n\n    private initCodeFlowInternal(\n        additionalState = '',\n        params = {}\n    ): void {\n\n        if (!this.validateUrlForHttps(this.loginUrl)) {\n            throw new Error('loginUrl  must use HTTPS (with TLS), or config value for property \\'requireHttps\\' must be set to \\'false\\' and allow HTTP (without TLS).');\n        }\n\n        this.createLoginUrl(additionalState, '', null, false, params)\n            .then(this.config.openUri)\n            .catch(error => {\n                console.error('Error in initAuthorizationCodeFlow');\n                console.error(error);\n            });\n    }\n\n    protected async createChallangeVerifierPairForPKCE(): Promise<[string, string]> {\n\n        if (!this.crypto) {\n            throw new Error('PKCI support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n        }\n\n\n        const verifier = await this.createNonce();\n        const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\n        const challenge = base64UrlEncode(challengeRaw);\n\n        return [challenge, verifier];\n    }\n\n    private extractRecognizedCustomParameters(tokenResponse: TokenResponse): Map<String, String> {\n      let foundParameters: Map<String, String> = new Map<String, String>();\n      if (!this.config.customTokenParameters) {\n        return foundParameters;\n      }\n      this.config.customTokenParameters.forEach((recognizedParameter: string) => {\n          if (tokenResponse[recognizedParameter]) {\n            foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n          }\n      });\n      return foundParameters;\n    }\n}\n","export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array<string>;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n","import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse<any>): Observable<any>;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler {\n  handleError(err: HttpResponse<any>): Observable<any> {\n    return throwError(err);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, of, merge } from 'rxjs';\nimport { catchError, filter, map, take, mergeMap, timeout } from 'rxjs/operators';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\nimport { OAuthModuleConfig } from '../oauth-module.config';\nimport { OAuthStorage } from '../types';\nimport { OAuthService } from '../oauth-service';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n\n    constructor(\n        private authStorage: OAuthStorage,\n        private oAuthService: OAuthService,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) { }\n\n    private checkUrl(url: string): boolean {\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\n        }\n\n        if (this.moduleConfig.resourceServer.allowedUrls) {\n            return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        }\n\n        return true;\n    }\n\n  public intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const url = req.url.toLowerCase();\n\n\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (!sendAccessToken) {\n      return next\n        .handle(req)\n        .pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n\n    return merge(\n      of(this.oAuthService.getAccessToken()).pipe(\n        filter(token => token ? true : false),\n      ),\n      this.oAuthService.events.pipe(\n        filter(e => e.type === 'token_received'),\n        timeout(this.oAuthService.waitForTokenInMsec || 0),\n        catchError(_ => of(null)), // timeout is not an error\n        map(_ => this.oAuthService.getAccessToken()),\n      ),\n    ).pipe(\n      take(1),\n      mergeMap(token => {\n        if (token) {\n          const header = 'Bearer ' + token;\n          const headers = req.headers.set('Authorization', header);\n          req = req.clone({ headers });\n        }\n\n        return next\n          .handle(req)\n          .pipe(catchError(err => this.errorHandler.handleError(err)));\n      }),\n    );\n  }\n}\n","import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise<any> {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): Promise<boolean> {\n    return Promise.resolve(true);\n  }\n}\n","import { MemoryStorage } from './types';\n\nexport function createDefaultLogger() {\n    return console;\n}\n\nexport function createDefaultStorage() {\n    return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\n}","import { OAuthStorage, OAuthLogger } from './types';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { OAuthService } from './oauth-service';\nimport { UrlHelperService } from './url-helper.service';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport {\n  OAuthResourceServerErrorHandler,\n  OAuthNoopResourceServerErrorHandler\n} from './interceptors/resource-server-error-handler';\nimport { DefaultOAuthInterceptor } from './interceptors/default-oauth.interceptor';\nimport { ValidationHandler } from './token-validation/validation-handler';\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\nimport { createDefaultLogger, createDefaultStorage } from './factories';\nimport { HashHandler, DefaultHashHandler } from './token-validation/hash-handler';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: []\n})\nexport class OAuthModule {\n  static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders<OAuthModule> {\n    return {\n      ngModule: OAuthModule,\n      providers: [\n        OAuthService,\n        UrlHelperService,\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\n        { provide: ValidationHandler, useClass: validationHandlerClass},\n        { provide: HashHandler, useClass: DefaultHashHandler },\n        {\n          provide: OAuthResourceServerErrorHandler,\n          useClass: OAuthNoopResourceServerErrorHandler\n        },\n        { provide: OAuthModuleConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: DefaultOAuthInterceptor,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { NullValidationHandler } from './null-validation-handler';\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n\n/**\n * This is just a dummy of the JwksValidationHandler\n * telling the users that the real one has been moved\n * to an library of its own, namely angular-oauth2-oidc-utils\n */\nexport class JwksValidationHandler extends NullValidationHandler {\n\n  constructor() {\n    super();\n    console.error(err);\n  }\n\n}","import { InjectionToken } from '@angular/core';\nimport { AuthConfig } from './auth.config';\n\nexport const AUTH_CONFIG = new InjectionToken<AuthConfig>('AUTH_CONFIG');\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {createDefaultLogger as ɵc,createDefaultStorage as ɵd} from './factories';\nexport {DefaultHashHandler as ɵb,HashHandler as ɵa} from './token-validation/hash-handler';"],"names":[],"mappings":"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"}